---
export interface Props {
  text: string;
  href?: string;
  variant?: 'primary' | 'secondary' | 'outline';
  size?: 'sm' | 'md' | 'lg';
  onclick?: string;
  class?: string;
  target?: string;
}

const {
  text,
  href,
  variant = 'primary',
  size = 'md',
  onclick,
  class: className = '',
  target,
} = Astro.props;

const baseClasses =
  'font-medium rounded-lg transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 inline-flex items-center justify-center';

const variantClasses = {
  primary: 'bg-blue-600 text-white hover:bg-blue-700 focus:ring-blue-500',
  secondary: 'bg-gray-600 text-white hover:bg-gray-700 focus:ring-gray-500',
  outline:
    'border-2 border-blue-600 text-blue-600 hover:bg-blue-600 hover:text-white focus:ring-blue-500',
};

const sizeClasses = {
  sm: 'px-3 py-1.5 text-sm',
  md: 'px-4 py-2 text-sm',
  lg: 'px-6 py-3 text-base',
};

const classes = `${baseClasses} ${variantClasses[variant]} ${sizeClasses[size]} ${className}`;
---

{
  href ? (
    <a href={href} class={classes} target={target}>
      {text}
    </a>
  ) : (
    <button type="button" class={classes} onclick={onclick}>
      {text}
    </button>
  )
}
